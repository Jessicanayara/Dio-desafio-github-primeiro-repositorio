/////git e github////
-cd (para entrar em uma pasta)
-dir (lista, localizar)
-mkdir(criar pasta)
-del (remover arquvos da pasta)
- cd.. (pra voltar e retroceder)
- cls (pra limpar o terminal)
- echo (criar arquivos)
-rmdir workspace /S /Q(para remover pasta pricipal)

/////gitbash//////
-git config (importante pra edições, pesquisar mais sobre depois)
-git init = é um comando único que você usa durante a configuração inicial de um novo repositório. A execução desse comando cria um novo subdiretório . git no diretório de trabalho atual. Essa ação também vai criar uma ramificação principal.
-git add =seleciona esse arquivo e o move para a área de teste, marcando-o para inclusão no próximo commit . Você pode selecionar todos os arquivos, um diretório, arquivos específicos ou até mesmo partes específicas de um arquivo para teste e confirmação.
- git commit

///atalhos importantes///
com o git bash eu consigo acessar o diretorio c apartir da pasta aberta
ctrl+l(limpa o bash)
flags:
-ls -a (visualiza pastas ocultas do git) 

////adicionando arquivo//////
-markdown
titulo 
#1
## 2...

////tracked and untracked////////
untracked=
ao usar o comando [git add, git add*(adiciona todas modificações), git add.) estaremos
mudando o status do arquivo para tracked staged que após isso precisa ou se prepara para receber 
o comando git commit (-m "") após isso o status passa a ser a um local repository

///adicionando o git ao github///
remote add origin (link novo repositorio github)
git push origin master


///resolvendo conflitos no git////
versoes
se uma pessoa editou o seu repositorio e voce tentou editar tambem 
ira dar erro
para resolver esse confito 
atualize a versão do md e apos isso 
git add*
git commit -m "resolve conflitos"
git push origin master - enviando ao github

////// para adicionar code em gitbash////
git clone (link github)

